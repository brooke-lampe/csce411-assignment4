Step D Queries

Relational Database:


depth 2

select DISTINCT friendId from friends where friends.personId in (select friendId from friends where personId=1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961

Showing rows 0 - 14 (15 total, Query took 0.0080 seconds.)


depth 3

select DISTINCT friendId from friends where friends.personId in (select DISTINCT friendId from friends where friends.personId in (select friendId from friends where personId=1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select DISTINCT friendId from friends where friends.personId in (select friendId from friends where personId=1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961

MySQL returned an empty result set (i.e. zero rows). (Query took 0.0270 seconds.)


depth 4

select DISTINCT friendId from friends where friends.personId in (select DISTINCT friendId from friends where friends.personId in (select DISTINCT friendId from friends where friends.personId in (select friendId from friends where personId=1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select DISTINCT friendId from friends where friends.personId in (select friendId from friends where personId=1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select DISTINCT friendId from friends where friends.personId in (select DISTINCT friendId from friends where friends.personId in (select friendId from friends where personId=1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select DISTINCT friendId from friends where friends.personId in (select friendId from friends where personId=1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select DISTINCT friendId from friends where friends.personId in (select friendId from friends where personId=1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961

MySQL returned an empty result set (i.e. zero rows). (Query took 0.4200 seconds.)   


depth 5

select DISTINCT friendId from friends where friends.personId in (select DISTINCT friendId from friends where friends.personId in (select DISTINCT friendId from friends where friends.personId in (select DISTINCT friendId from friends where friends.personId in (select friendId from friends where personId=1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select DISTINCT friendId from friends where friends.personId in (select friendId from friends where personId=1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select DISTINCT friendId from friends where friends.personId in (select DISTINCT friendId from friends where friends.personId in (select friendId from friends where personId=1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select DISTINCT friendId from friends where friends.personId in (select friendId from friends where personId=1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select DISTINCT friendId from friends where friends.personId in (select friendId from friends where personId=1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select DISTINCT friendId from friends where friends.personId in (select DISTINCT friendId from friends where friends.personId in (select DISTINCT friendId from friends where friends.personId in (select friendId from friends where personId=1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select DISTINCT friendId from friends where friends.personId in (select friendId from friends where personId=1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select DISTINCT friendId from friends where friends.personId in (select DISTINCT friendId from friends where friends.personId in (select friendId from friends where personId=1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select DISTINCT friendId from friends where friends.personId in (select friendId from friends where personId=1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select DISTINCT friendId from friends where friends.personId in (select friendId from friends where personId=1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select DISTINCT friendId from friends where friends.personId in (select DISTINCT friendId from friends where friends.personId in (select friendId from friends where personId=1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select DISTINCT friendId from friends where friends.personId in (select friendId from friends where personId=1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select DISTINCT friendId from friends where friends.personId in (select friendId from friends where personId=1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961) and friendId not in (select friendId from friends where personId=1961) and friendId<>1961

MySQL returned an empty result set (i.e. zero rows). (Query took 1.7865 seconds.)     




Neo4j:


without indices

DROP INDEX ON :Person(id)
DROP INDEX ON :Person(id, name, state)

with indices

CREATE INDEX ON :Person(id)
CREATE INDEX ON :Person(id, name, state)


depth 2

MATCH (person:Person { name: "Cecilia Thenhaus" })-[:FRIEND_WITH*2..2]->(friend_of_friend:Person)
WHERE NOT ((person)-[:FRIEND_WITH*1..1]->(friend_of_friend))
RETURN DISTINCT friend_of_friend.id

time_without_indices: 4ms
time_with_indices: 3ms


depth 3

MATCH (person:Person { name: "Cecilia Thenhaus" })-[:FRIEND_WITH*3..3]->(friend_of_friend:Person)
WHERE NOT ((person)-[:FRIEND_WITH*1..2]->(friend_of_friend))
RETURN DISTINCT friend_of_friend.id

time_without_indices: 43ms
time_with_indices: 41ms


depth 4

MATCH (person:Person { name: "Cecilia Thenhaus" })-[:FRIEND_WITH*4..4]->(friend_of_friend:Person)
WHERE NOT ((person)-[:FRIEND_WITH*1..3]->(friend_of_friend))
RETURN DISTINCT friend_of_friend.id

time_without_indices: 481ms
time_with_indices: 499ms


depth 5

MATCH (person:Person { name: "Cecilia Thenhaus" })-[:FRIEND_WITH*5..5]->(friend_of_friend:Person)
WHERE NOT ((person)-[:FRIEND_WITH*1..4]->(friend_of_friend))
RETURN DISTINCT friend_of_friend.id

time_without_indices: 3028ms
time_with_indices: 3094ms


MACHINE CONFIGURATION
Manufacturer		Dell
Model				Latitude 3570
CPU					i7-6500U 2.50 GHz
Main Memory Size	16.0 GB RAM
Hard Disk			500 GB HDD
OS					64-bit Windows 7 Professional


INDEXING CONCLUSIONS
The times for the indexed queries are very similar to the times for the non-indexed queries.  We cannot refine our discovers with Neo4j by using or not using indexing because we have no statistically significant data.  We theorize that we would have better findings if we used a larger data set, or if our queries included all friends of friends, rather than only friends of friends who are not immediate friends (all friends of equal or lesser depth).
